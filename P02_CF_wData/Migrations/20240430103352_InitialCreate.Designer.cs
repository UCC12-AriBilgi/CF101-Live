// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P02_CF_wData.Data;

#nullable disable

namespace P02_CF_wData.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240430103352_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P02_CF_wData.Entities.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StudentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Students", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsActive = false,
                            LastName = "Karaçivi",
                            Name = "Ümit",
                            StudentNo = "1234"
                        },
                        new
                        {
                            ID = 2,
                            IsActive = false,
                            LastName = "Karaçivi",
                            Name = "Nurgül",
                            StudentNo = "5678"
                        });
                });

            modelBuilder.Entity("P02_CF_wData.Entities.Teacher", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRetired")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Teachers", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsActive = false,
                            IsRetired = false,
                            LastName = "One",
                            Name = "Teacher"
                        },
                        new
                        {
                            ID = 2,
                            IsActive = false,
                            IsRetired = false,
                            LastName = "Two",
                            Name = "Teacher"
                        });
                });

            modelBuilder.Entity("P02_CF_wData.Entities.Student", b =>
                {
                    b.HasOne("P02_CF_wData.Entities.Teacher", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherID");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("P02_CF_wData.Entities.Teacher", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
